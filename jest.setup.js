import '@testing-library/jest-dom'\n\n// Mock Next.js router\njest.mock('next/navigation', () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    replace: jest.fn(),\n    prefetch: jest.fn(),\n    back: jest.fn(),\n    forward: jest.fn(),\n    refresh: jest.fn(),\n  }),\n  useSearchParams: () => new URLSearchParams(),\n  usePathname: () => '/',\n}))\n\n// Mock environment variables\nprocess.env.NODE_ENV = 'test'\n\n// Mock fetch globally\nglobal.fetch = jest.fn()\n\n// Mock console methods to reduce noise in tests\nglobal.console = {\n  ...console,\n  log: jest.fn(),\n  debug: jest.fn(),\n  info: jest.fn(),\n  warn: jest.fn(),\n  error: jest.fn(),\n}\n\n// Mock window.matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n})\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = class IntersectionObserver {\n  constructor() {}\n  observe() {\n    return null\n  }\n  disconnect() {\n    return null\n  }\n  unobserve() {\n    return null\n  }\n}"